class Solution {
    public:
        bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
            
            vector<vector<int>> graph(n);

            for(int i = 0; i<edges.size(); i++)
            {
                graph[edges[i][0]].push_back(edges[i][1]);
            }

            vector<bool> visited(n, false);
            queue<int> q;

            q.push(source);
            visited[source]=true;

            while(!q.empty())
            {
                int node = q.front();
                q.pop();

                if(node==destination)
                    return true;
                
                for(int neighbor : graph[node])
                {
                    if(!visited[neighbor])
                    {
                        visited[neighbor]=true;
                        q.push(neighbor);
                    }
                }
            }

            return false;

        }
    };
