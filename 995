class Solution {
public:
    int minKBitFlips(vector<int>& nums, int k) {

        int n = nums.size();

        int count = 0;

        vector<int> flips(n+1, 0);
        int flip = 0;

        for (int i = 0; i <= n-k ; i++)
        {
            flip -= flips[i];
           
           if (nums[i] == 0)
           {
               if (flip % 2 != 1)
               {
                   flip++;
                   flips[i + k] += 1;
                   count++;
               }
           }
           else if(nums[i] == 1)
           {
               if (flip % 2 != 0)
               {
                   flip++;
                   flips[i + k] += 1;
                   count++;
               }
           }
        }

        for (int i = n - k + 1; i < n; i++)
        {
            flip -= flips[i];

            if (nums[i] == 0)
            {
                if (flip % 2 != 1)
                {
                    return -1;
                }
            }
            else if (nums[i] == 1)
            {
                if (flip % 2 != 0)
                {
                    return -1;
                }
            }
        }

        
        return count;
        
    }
};
